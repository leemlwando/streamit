module.exports = function getAll(api, accumulator) {
  function allAndLast(args) {
    let last = args.pop();
    return [args, last];
  }

  let apiAll = function () {
    let args = Array.from(arguments);
    options = args.pop() || {};
    options.acc = options.acc || [];
    // let callback;
    args = args || [];
    // if (acc && acc.constructor.name === "Array") {
    //   callback = args.pop();
    // } else {
    //   callback = acc;
    //   acc = [];
    // }
    // if (typeof callback === "function") {
    //   options = args.pop();
    // } else {
    //   options = callback;
    //   callback = undefined;
    // }
    console.log("args is", typeof arg);
    console.log("options is", typeof options);
    // console.log("callback is", typeof callback);
    options.max_results = options.max_results || 500;
    return api.apply(this, [...args, options]).then(
      (response) => {

        let acc = options.acc.concat(accumulator(response));
        let next_cursor = options.next_cursor;
        if (next_cursor) {
          console.log(`got ${acc.length} so far`);

          return apiAll.apply(this, [...args, {...options, next_cursor, acc}]);
        } else {
          console.log("Done");

          // callback(undefined, acc);
          return acc;
        }
      }).catch(
      (error) => {
        console.log("errror", error);

        // callback(error, acc);
        return acc;

      });
  };
  return apiAll;
};
